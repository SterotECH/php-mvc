#!/usr/bin/env php
<?php
declare(strict_types=1);

// Refuse to run when called from php-cgi
if (strpos(PHP_SAPI, 'cgi') === 0) {
    exit("The cli tool is not supported when running php-cgi. It needs php-cli to function!\n\n");
}

// Check PHP version.
$minPhpVersion = '7.4'; // If you update this, don't forget to update `public/index.php`.
if (version_compare(PHP_VERSION, $minPhpVersion, '<')) {
    $message = sprintf(
        'Your PHP version must be %s or higher to run Stero MVC. Current version: %s',
        $minPhpVersion,
        PHP_VERSION
    );

    exit($message);
}

// We want errors to be shown when using it from the CLI.
error_reporting(E_ALL);
ini_set('display_errors', '1');

/**
 * @var bool
 *
 * @deprecated No longer in use. `Stero MVC` has `$context` property.
 */
define('STERO', true);


const BASE_PATH = __DIR__;

require 'vendor/autoload.php';
require 'app/Core/utils.php';

use App\Console\Commands\ServeCommand;
use App\Console\Commands\DBDownCommand;
use App\Console\Commands\MigrateCommand;
use App\Console\Commands\DBStatusCommand;
use App\Console\Commands\DBRefreshCommand;
use App\Console\Commands\MakeModelCommand;
use Symfony\Component\Console\Application;
use App\Console\Commands\AlterTableCommand;
use App\Console\Commands\ApplyViewsCommand;
use App\Console\Commands\MakeSeederCommand;
use App\Console\Commands\MakeCommandCommand;
use App\Console\Commands\MakeMigrationCommand;
use Symfony\Component\Console\Input\ArgvInput;
use App\Console\Commands\MakeControllerCommand;
use App\Console\Commands\CreateSuperuserCommand;
use App\Console\Commands\CreateUserCommand;
use App\Console\Commands\CreateViewCommand;
use App\Console\Commands\DBSeedCommand;
use App\Console\Commands\DeleteMigrationCommand;
use App\Console\Commands\DropViewCommand;
use Symfony\Component\Console\Output\ConsoleOutput;

$app = new Application();

$dotenv = Dotenv\Dotenv::createImmutable(__DIR__);
$dotenv->load();

$application = new Application();

$command = $argv[1] ?? '';

if ($command === 'completion') {
    $application->run(new ArgvInput(), new ConsoleOutput());
    exit;
}

// commands
$application->add(new AlterTableCommand());
$application->add(new ApplyViewsCommand());
$application->add(new CreateSuperuserCommand());
$application->add(new CreateUserCommand());
$application->add(new CreateViewCommand());
$application->add(new DBDownCommand());
$application->add(new DBRefreshCommand());
$application->add(new DBStatusCommand());
$application->add(new DBSeedCommand());
$application->add(new DeleteMigrationCommand());
$application->add(new DropViewCommand());
$application->add(new MakeControllerCommand());
$application->add(new MakeCommandCommand());
$application->add(new MigrateCommand());
$application->add(new MakeSeederCommand());
$application->add(new MakeMigrationCommand());
$application->add(new MakeModelCommand());
$application->add(new ServeCommand());


$application->run();
